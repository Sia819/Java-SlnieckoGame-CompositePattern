@startuml

title __SLNIECKO's Class Diagram__\n

  namespace slniecko {
    class slniecko.BasicGameObject {
        - areaHeight : int
        - areaWidth : int
        - deltaX : int
        - deltaY : int
        - x : int
        - y : int
        + BasicGameObject()
        + draw()
        + giveBody()
        + hit()
        + move()
        - resetLocation()
    }
  }
  

  namespace slniecko {
    class slniecko.BonusObject {
        - counter : int
        - zobrazeny : boolean
        + BonusObject()
        + draw()
        + giveBody()
        + hit()
        + move()
    }
  }
  

  namespace slniecko {
    class slniecko.Game {
        - contentPanel : JPanel
        - imagePath : String
        - objectCount : int
        - score : int
        - scoreLabel : JLabel
        - scroeTextLabel : JLabel
        - timer : Timer
        + Game()
        + editScore()
        + getImagePath()
        + getObjectCount()
        {static} + main()
        + pauseGame()
        + startGame()
        - initComponents()
    }
  }
  

  namespace slniecko {
    class slniecko.GameObjectContainer {
        - body : int
        - gameObject : ArrayList<IObject>
        + GameObjectContainer()
        + GameObjectContainer()
        + addObject()
        + draw()
        + giveBody()
        + hit()
        + move()
    }
  }
  

  namespace slniecko {
    class slniecko.GameObjectImage {
        - bitmap : BufferedImage
        + GameObjectImage()
        + GameObjectImage()
        + draw()
        + getHeight()
        + getImage()
        + getWidth()
        + setHeight()
        + setWidth()
    }
  }
  

  namespace slniecko {
    class slniecko.GameObjectImageFactory {
        - pool : HashMap
        {static} - singleton : GameObjectImageFactory
        + getGameImage()
        {static} + getInstance()
        - GameObjectImageFactory()
    }
  }
  

  namespace slniecko {
    interface slniecko.IObject {
        {abstract} + draw()
        {abstract} + giveBody()
        {abstract} + hit()
        {abstract} + move()
    }
  }
  

  namespace slniecko {
    class slniecko.InputHandler {
        - isClick : boolean
        - isClosed : boolean
        - xclick : int
        - yclick : int
        + InputHandler()
        + dajClick()
        + isClickAction()
        + isClosed()
        + mouseClicked()
        + mouseDragged()
        + mouseEntered()
        + mouseExited()
        + mouseMoved()
        + mousePressed()
        + mouseReleased()
        + windowActivated()
        + windowClosed()
        + windowClosing()
        + windowDeactivated()
        + windowDeiconified()
        + windowGainedFocus()
        + windowIconified()
        + windowLostFocus()
        + windowOpened()
    }
  }
  

  namespace slniecko {
    class slniecko.PlayArea {
        - height : int
        - width : int
        + PlayArea()
        + actionPerformed()
        + paintComponent()
        - generateBackground()
    }
  }
  

  slniecko.BasicGameObject .up.|> slniecko.IObject
  slniecko.BasicGameObject o-- slniecko.GameObjectImage : image
  slniecko.BonusObject -up-|> slniecko.BasicGameObject
  slniecko.Game -up-|> javax.swing.JFrame
  slniecko.GameObjectContainer .up.|> slniecko.IObject
  slniecko.InputHandler .up.|> java.awt.event.MouseListener
  slniecko.InputHandler .up.|> java.awt.event.MouseMotionListener
  slniecko.InputHandler .up.|> java.awt.event.WindowFocusListener
  slniecko.InputHandler .up.|> java.awt.event.WindowListener
  slniecko.InputHandler o-- slniecko.Game : game
  slniecko.PlayArea .up.|> java.awt.event.ActionListener
  slniecko.PlayArea -up-|> javax.swing.JComponent
  slniecko.PlayArea o-- slniecko.Game : game
  slniecko.PlayArea o-- slniecko.IObject : gameObject
  slniecko.PlayArea o-- slniecko.InputHandler : input


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
